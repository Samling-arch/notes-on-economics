{
	"nodes":[
		{"id":"summary","type":"text","text":"## 🚀 SQL函数使用心法\n\n### 黄金公式\n$$ 完整查询 = 选择字段 + 数据源 + 过滤 + 分组 + 组过滤 + 排序 + 限制 $$\n\n### 最佳实践\n1. 文本处理：`CONCAT(LEFT(name,1),'***')`\n2. 日期分析：`DATEDIFF(end_date, start_date)`\n3. 分层统计：`GROUP BY department`\n4. 质量监控：`HAVING AVG(score) < 60`\n\n> 核心口诀：\n- 聚合必分组（GROUP BY）\n- 组筛用HAVING\n- 随机用RAND()\n- 切片SUBSTRING","x":570,"y":1480,"width":860,"height":610},
		{"id":"math_func","type":"text","text":"## ➗ 数学函数精要\n\n### 常用函数\n- `ABS(x)` → 绝对值\n  - `ABS(-3)` → $3$\n- `RAND()` → [0,1)随机数\n- `RAND(N)` → 种子随机数（可复现）\n- `ROUND(x, d)` → 四舍五入\n  - `ROUND(1.236, 2)` → $1.24$\n- `MOD(a, b)` → 取余运算\n  - `MOD(7, 3)` → $1$\n\n### 特殊函数\n- `SIN(x)` → 正弦\n- `COS(x)` → 余弦\n- `PI()` → π值\n\n# 随机数原理\n$$ random = (seed \\times a + c) \\mod m $$\n线性同余法生成伪随机数\n\n> 实战：随机抽样\n```sql\nSELECT * FROM users\nORDER BY RAND() \nLIMIT 10;```","x":800,"y":500,"width":400,"height":500},
		{"id":"agg_func","type":"text","text":"## 🧮 聚合函数核心\n\n### 五大金刚\n1. `COUNT()` → 计数\n2. `SUM()` → 求和\n3. `AVG()` → 平均值\n4. `MAX()` → 最大值\n5. `MIN()` → 最小值\n\n### 单课程统计\n```sql\n-- 课程01的学生统计\nSELECT \n  COUNT(*) AS student_count,\n  SUM(score) AS total_score,\n  AVG(score) AS avg_score,\n  MAX(score) AS max_score,\n  MIN(score) AS min_score\nFROM scores\nWHERE course_id = '01';\n```\n# 执行过程\n1. WHERE过滤课程01\n2. 逐行扫描成绩数据\n3. 实时更新聚合值\n$$ avg = \\frac{\\sum scores}{count} $$","x":1320,"y":-10,"width":400,"height":400},
		{"id":"group_by","type":"text","text":"## 📊 分组聚合实战\n\n### GROUP BY 流程\n```sql\nSELECT\n  course_id,\n  COUNT(*) AS num_students,\n  AVG(score) AS avg_score\nFROM scores\nGROUP BY course_id;\n```\n# 执行原理\n1. 按course_id分组\n2. 每组独立计算聚合值\n3. 输出每组一行结果\n\n### HAVING 筛选\n```sql\n-- 筛选平均分>65的课程\nSELECT \n  course_id,\n  AVG(score) AS avg_score\nFROM scores\nGROUP BY course_id\nHAVING AVG(score) > 65;\n```\n# 与WHERE区别\n- WHERE → 分组前过滤行\n- HAVING → 分组后过滤组\n\n> 完整查询结构：\n```sql\nSELECT...FROM...\nWHERE...\nGROUP BY...\nHAVING...\nORDER BY...\nLIMIT...```","x":1320,"y":500,"width":400,"height":500},
		{"id":"func_types","type":"text","text":"## SQL函数四大类型\n\n### 1. 📅 日期函数\n> 处理购买周期/留存分析\n### 2. 🔤 文本函数\n> 截取尾号/随机实验\n### 3. ➗ 数学函数\n> 生成随机数/数值处理\n### 4. 🧮 聚合函数\n> 统计分析核心工具\n\n# 通俗理解\n就像工具箱的四个抽屉：\n- 时间工具 → 日期函数\n- 文字工具 → 文本函数\n- 计算器 → 数学函数\n- 统计仪 → 聚合函数","x":285,"y":-10,"width":425,"height":400},
		{"id":"date_func","type":"text","text":"## 📅 日期函数详解\n\n### 核心函数\n- `YEAR(date)` → 提取年份\n- `MONTH(date)` → 提取月份\n- `DAY(date)` → 提取日期\n- `CURDATE()` → 当前日期\n- `NOW()` → 当前时间戳\n\n### 日期差计算\n```sql\n-- 计算日期间隔\nSELECT DATEDIFF('2023-11-08', '2023-11-07'); → 1\n\n-- 日期增减\nSELECT DATE_SUB(CURDATE(), INTERVAL 1 DAY);\nSELECT DATE_ADD(CURDATE(), INTERVAL 1 MONTH);\n```\n# 底层原理\n日期存储为整数（如20231108），\n函数通过数学运算提取时间分量：\n$$ year = date \\div 10000 $$\n$$ month = (date \\mod 10000) \\div 100 $$\n\n### 时间分量提取\n- `HOUR(time)` → 小时\n- `MINUTE(time)` → 分钟\n- `SECOND(time)` → 秒\n- `DAYOFWEEK(date)` → 星期几\n  - 周日=0, 周一=1,...,周六=6\n\n> 实战：计算用户购买间隔\n```sql\nSELECT \n  DATEDIFF(payment_date, register_date) AS decision_days\nFROM orders;```","x":-320,"y":500,"width":400,"height":500},
		{"id":"text_func","type":"text","text":"## 🔤 文本处理函数\n\n### 基础操作\n- `LEFT(str, n)` → 左截取\n  - `LEFT('ABC123', 3)` → 'ABC'\n- `RIGHT(str, n)` → 右截取\n  - `RIGHT('ABC123', 3)` → '123'\n- `LENGTH(str)` → 字符串长度\n- `LOWER(str)` → 转小写\n- `UPPER(str)` → 转大写\n\n### 高级技巧\n```sql\n-- 去除空格\nSELECT TRIM('  text  '); → 'text'\nSELECT LTRIM('  text'); → 'text'\nSELECT RTRIM('text  '); → 'text'\n\n-- 子串截取\nSELECT SUBSTRING('ABCDE', 2, 3); → 'BCD'\n\n-- 倒序截取（取倒数第2个）\nSELECT SUBSTRING('XYZ', -2, 1); → 'Y'\n\n-- 字符串拼接\nSELECT CONCAT('A', 'B', 'C'); → 'ABC'\n```\n# 内存原理\n字符串在内存中存储为字符数组：\n```\n['A','B','C','1','2','3']\n↑位置索引从1开始\n```\n$$ substring = str[start:start+length] $$\n\n> 实战：手机号脱敏\n```sql\nSELECT CONCAT('****', RIGHT(phone, 4));```","x":298,"y":500,"width":400,"height":500},
		{"id":"title","type":"text","text":"# 20分钟搞定29个SQL基础函数\n\n数据星爷 | 2023-11-11\n\n[视频链接](https://www.bilibili.com/video/BV1zH4y1B7ny/)","x":560,"y":-520,"width":700,"height":150}
	],
	"edges":[
		{"id":"e1","fromNode":"title","fromSide":"bottom","toNode":"func_types","toSide":"right","color":"1"},
		{"id":"e2","fromNode":"func_types","fromSide":"bottom","toNode":"date_func","toSide":"top","color":"2"},
		{"id":"e3","fromNode":"func_types","fromSide":"bottom","toNode":"text_func","toSide":"top","color":"3"},
		{"id":"e4","fromNode":"func_types","fromSide":"right","toNode":"math_func","toSide":"left","color":"4"},
		{"id":"e5","fromNode":"func_types","fromSide":"right","toNode":"agg_func","toSide":"left","color":"5"},
		{"id":"e6","fromNode":"agg_func","fromSide":"bottom","toNode":"group_by","toSide":"top","color":"5"},
		{"id":"e7","fromNode":"date_func","fromSide":"right","toNode":"summary","toSide":"top","color":"2"},
		{"id":"e8","fromNode":"text_func","fromSide":"bottom","toNode":"summary","toSide":"top","color":"3"},
		{"id":"e9","fromNode":"math_func","fromSide":"bottom","toNode":"summary","toSide":"top","color":"4"},
		{"id":"e10","fromNode":"group_by","fromSide":"left","toNode":"summary","toSide":"top","color":"5"}
	]
}