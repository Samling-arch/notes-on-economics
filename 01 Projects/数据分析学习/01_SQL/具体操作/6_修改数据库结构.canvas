{
	"nodes":[
		{"id":"charset","type":"text","text":"## 修改字符集\n```sql\nALTER TABLE students CHARACTER SET gbk;\n```\n**验证方法**：\n`SHOW CREATE TABLE students;`\n**原理**：\n表级字符集可独立于数据库设置","x":400,"y":20,"width":350,"height":180,"color":"3"},
		{"id":"drop-column","type":"text","text":"## 删除字段\n```sql\nALTER TABLE students \nDROP class_name;\n```\n**注意**：\n- 只需指定字段名\n- 不可逆操作","x":390,"y":580,"width":370,"height":180,"color":"3"},
		{"id":"rename","type":"text","text":"## 修改表名\n```sql\nALTER TABLE student RENAME TO students;\n```\n**注意**：\n- 必须包含 `TABLE` 关键字\n- 执行后验证：`SHOW TABLES;`","x":400,"y":-290,"width":350,"height":180,"color":"3"},
		{"id":"add-column","type":"text","text":"## 添加字段\n```sql\nALTER TABLE students \nADD class_name VARCHAR(32) NOT NULL;\n```\n**特点**：\n- 默认添加到末尾\n- 必须指定字段类型\n- 约束为可选项\n**验证**：`DESC students;`","x":400,"y":300,"width":350,"height":200,"color":"3"},
		{"id":"concept","type":"text","text":"## 修改维度框架\n1. **表层修改**\n  - 表名修改\n  - 字符集修改\n\n2. **字段级修改**\n  - 增删字段\n  - 修改字段属性\n  - 调整字段位置","x":-431,"y":-10,"width":325,"height":240,"color":"2"},
		{"id":"modify-column","type":"text","text":"## 修改字段属性\n### 类型/约束修改\n```sql\nALTER TABLE students \nMODIFY name VARCHAR(32) NOT NULL;\n```\n\n### 字段重命名\n```sql\nALTER TABLE students \nCHANGE birth birthday DATE;\n```\n**关键区别**：\n- `MODIFY` 保留原名改属性\n- `CHANGE` 需同时指定新旧名称\n- 本质是先删除后新建","x":-443,"y":300,"width":350,"height":280,"color":"6"},
		{"id":"position","type":"text","text":"## 字段位置控制\n### 添加时定位\n```sql\nALTER TABLE students\nADD class_name VARCHAR(32) AFTER id;\n```\n\n### 修改时重定位\n```sql\nALTER TABLE students \nMODIFY class_name VARCHAR(20) FIRST;\n```\n\n```sql\nALTER TABLE students \nCHANGE class_name cls_name \nVARCHAR(20) AFTER birthday;\n```\n**定位关键字**：\n- `FIRST`：首字段\n- `AFTER field`：指定字段后","x":-458,"y":670,"width":380,"height":280,"color":"5"},
		{"id":"root","type":"text","text":"# MySQL表结构修改\n**视频来源**：[苑昊老师 B站教程](https://www.bilibili.com/video/BV1mxrfYsEyP/)\n**日期**：2024-12-18","x":-60,"y":50,"width":400,"height":120,"color":"4"},
		{"id":"tip","type":"text","text":"## 学习技巧\n1. 理解SQL执行本质：\n  - `CHANGE` = 删除+新建\n2. 操作必须包含：\n  - 字段名+数据类型\n3. 约束/位置为可选项\n4. 避免纯记忆，理解操作维度","x":-437,"y":-200,"width":337,"height":160,"color":"1"},
		{"id":"5ae668f64c36866c","x":-420,"y":-2320,"width":1140,"height":1480,"type":"text","text":"好的，这是关于MySQL字段操作主要注意事项的总结表格，使用Obsidian Markdown格式：\n\n# 字段操作注意事项总结表\n\n| 操作类型 (Operation Type)                                              | SQL 关键字 (Keyword) | 核心语法示例 (Core Syntax Example)                                                    | 必须提供的参数 (Mandatory Parameters)                                            | 可选参数 (Optional Parameters)                                                                              | 主要注意事项 (Key Precautions)                                                                                                                                                                                                                                          |\n| :----------------------------------------------------------------- | :---------------- | :------------------------------------------------------------------------------ | :------------------------------------------------------------------------ | :------------------------------------------------------------------------------------------------------ | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **添加字段** (Adding a Field)                                          | `ADD`             | `ALTER TABLE tbl ADD col_name type [constraints] [position];`                   | `col_name` (字段名), <br>`type` (数据类型)                                       | `constraints` (约束，如 `NOT NULL`, `UNIQUE`, `DEFAULT value`), <br>`position` (`FIRST`, `AFTER other_col`) | 1. **字段名和类型是基础**，必须提供。<br>2. **位置**：不指定则默认添加到表的最后一列。<br>3. **约束**：根据需求添加，如不加 `NOT NULL`，则默认为 `NULL` (允许为空)。                                                                                                                                                       |\n| **删除字段** (Deleting a Field)                                        | `DROP`            | `ALTER TABLE tbl DROP col_name;`                                                | `col_name` (要删除的字段名)                                                      | (`COLUMN` 关键字可选，如 `DROP COLUMN col_name`)                                                               | 1. **只需字段名**：系统会自动移除该字段的所有信息 (类型、约束等)。<br>2. **操作不可逆**：字段及其数据将被永久删除，务必谨慎。<br>3. `COLUMN` 关键字通常可以省略。                                                                                                                                                               |\n| **修改字段类型/约束 (不改名)** (Modifying Type/Constraints, No Name Change)   | `MODIFY`          | `ALTER TABLE tbl MODIFY col_name new_type [new_constraints] [position];`        | `col_name` (字段名), <br>`new_type` (新的数据类型)                                 | `new_constraints` (新的约束), <br>`position` (`FIRST`, `AFTER other_col`)                                   | 1. **字段名不变**：此命令不用于修改字段名。<br>2. **新类型必须提供**：即使数据类型不改变，也必须在 `MODIFY` 后写上类型。<br>3. **约束完全覆盖**：你提供的 `new_constraints` 会**完全取代**旧的约束。若想保留原有约束 (如 `NOT NULL`)，必须在新定义中明确写出；若不写，原有约束（主键、唯一等索引除外）可能会丢失。 <br>4. **可以调整位置**。                                                |\n| **修改字段名 (可同时改类型/约束)** (Changing Name, Optionally Type/Constraints) | `CHANGE`          | `ALTER TABLE tbl CHANGE old_col new_col new_type [new_constraints] [position];` | `old_col_name` (旧字段名), <br>`new_col_name` (新字段名), <br>`new_type` (新的数据类型) | `new_constraints` (新的约束), <br>`position` (`FIRST`, `AFTER other_col`)                                   | 1. **主要用于改名**：也可以同时修改类型和约束。<br>2. **三项核心不能少**：**旧字段名、新字段名、新数据类型**都必须提供，即使类型不打算改变，也必须写上。<br>3. **内部机制**：可以理解为“先删除旧字段，再添加新字段”，所以新字段的类型和约束是必须的。<br>4. **约束完全覆盖**：与 `MODIFY` 类似，约束会被新定义完全取代。<br>5. **可以调整位置**。                                                        |\n| **调整字段位置** (Adjusting Field Position)                              | `FIRST` / `AFTER` | (作为 `ADD`, `MODIFY`, `CHANGE` 的一部分)                                             | (不单独作为命令，依赖于主体操作)                                                         |                                                                                                         | 1. **非独立命令**：是 `ADD`, `MODIFY`, `CHANGE` 语句中的一个可选部分。<br>2. `FIRST`：将字段置于表的第一列。<br>3. `AFTER existing_col_name`：将字段置于 `existing_col_name` 字段之后。<br>4. **没有 `BEFORE` 关键字**。<br>5. **不能单独调整位置**：调整位置时，必须伴随着对字段的定义（如 `ADD`）或重新定义（如 `MODIFY`/`CHANGE`），这意味着类型等信息也需要提供。 |\n\n希望这个表格能帮助你更好地理解和记忆MySQL字段操作的要点！"},
		{"id":"650c0acda57c74b2","x":-1580,"y":-1820,"width":1077,"height":481,"type":"file","file":"00-Obsidian/附件/Pasted image 20250609090057.png"}
	],
	"edges":[
		{"id":"e1","fromNode":"root","fromSide":"left","toNode":"concept","toSide":"right"},
		{"id":"e2","fromNode":"root","fromSide":"right","toNode":"rename","toSide":"left"},
		{"id":"e3","fromNode":"rename","fromSide":"bottom","toNode":"charset","toSide":"top"},
		{"id":"e4","fromNode":"charset","fromSide":"bottom","toNode":"add-column","toSide":"top"},
		{"id":"e5","fromNode":"add-column","fromSide":"bottom","toNode":"drop-column","toSide":"top"},
		{"id":"e6","fromNode":"concept","fromSide":"bottom","toNode":"modify-column","toSide":"top"},
		{"id":"e7","fromNode":"modify-column","fromSide":"bottom","toNode":"position","toSide":"top"},
		{"id":"e8","fromNode":"concept","fromSide":"top","toNode":"tip","toSide":"bottom"},
		{"id":"d0f6c3a0574f431b","fromNode":"root","fromSide":"top","toNode":"5ae668f64c36866c","toSide":"bottom"},
		{"id":"7fc0921b0f19a14d","fromNode":"650c0acda57c74b2","fromSide":"right","toNode":"5ae668f64c36866c","toSide":"left"}
	],
	"jsoncanvas":"1.0"
}