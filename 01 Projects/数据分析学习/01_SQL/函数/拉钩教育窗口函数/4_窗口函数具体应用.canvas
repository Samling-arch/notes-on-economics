{
	"nodes":[
		{"id":"title_node","type":"text","text":"# 拉钩教育数据分析训练营：窗口函数具体应用\n\n**第一讲：窗口函数说明** | 经典老师 | 2021-05-18\n\n[视频链接](https://www.bilibili.com/video/av205732110/)\n\n> 这节课我们来具体应用窗口函数，学习三大类窗口函数的实际使用","x":400,"y":-100,"width":700,"height":140,"color":"4"},
		{"id":"cumulative_sum_concept","type":"text","text":"# 累计求和核心概念\n\n## 语法结构\n```sql\nSUM(column) OVER (window_specification)\n```\n\n## 核心思想\n- **累计性**：包含当前行及之前所有行\n- **窗口性**：在指定窗口范围内计算\n- **排序性**：需要ORDER BY确定累计顺序\n\n## 实际应用场景\n- 销售累计统计\n- 用户消费累计\n- 库存累计变化\n- 时间序列累计分析\n\n## 数学表达式\n$$\\text{累计值}_i = \\sum_{j=1}^{i} \\text{当期值}_j$$\n\n> **通俗理解**：就像存钱一样，每个月都把之前的钱加上这个月的钱","x":450,"y":100,"width":400,"height":280,"color":"2"},
		{"id":"common_errors","type":"text","text":"# 常见错误与解决\n\n## 语法错误\n1. **缺少FROM子句**\n   ```sql\n   -- 错误\n   SELECT ... (子查询) a\n   \n   -- 正确\n   SELECT ... FROM (子查询) a\n   ```\n\n2. **子查询别名缺失**\n   - 子查询必须有别名\n   - 别名用于字段引用\n\n3. **字段引用错误**\n   - 使用`a.column`格式\n   - 确保字段存在\n\n## 逻辑错误\n1. **ORDER BY缺失**\n   - 累计计算必须排序\n   - 顺序决定累计逻辑\n\n2. **年份过滤遗漏**\n   - 确保数据范围正确\n   - 检查过滤条件\n\n## 性能优化\n- 适当添加索引\n- 减少不必要的字段\n- 合理使用分区\n\n> **经验总结**：细心检查语法，逻辑清晰最重要","x":1400,"y":100,"width":300,"height":400,"color":"6"},
		{"id":"function_classification","type":"text","text":"# 窗口函数三大分类\n\n## 1. 累计计算函数\n- **SUM()**: 累计求和\n- **AVG()**: 累计平均\n- **COUNT()**: 累计计数\n- **MIN()/MAX()**: 累计最值\n\n## 2. 排序函数\n- **ROW_NUMBER()**: 连续排名\n- **RANK()**: 并列排名（跳跃）\n- **DENSE_RANK()**: 并列排名（连续）\n\n## 3. 迁移分析函数\n- **LAG()**: 向前取值\n- **LEAD()**: 向后取值\n- **FIRST_VALUE()**: 窗口首值\n- **LAST_VALUE()**: 窗口末值\n\n> **通俗理解**：就像三种不同的计算器，分别用来累加、排序、对比","x":-20,"y":80,"width":350,"height":320,"color":"1"},
		{"id":"business_requirement","type":"text","text":"# 业务需求分析\n\n## 具体需求\n**查询出2019年每月的支付总额，并显示截止到当月的累计支付总额**\n\n## 需求拆解\n1. **时间限制**: 仅2019年数据\n2. **分组维度**: 按月份分组\n3. **统计指标**: 每月支付总额\n4. **累计计算**: 截止当月累计支付总额\n\n## 期望结果格式\n| 月份 | 当月支付总额 | 累计支付总额 |\n|------|-------------|-------------|\n| $1$ | $A_1$ | $A_1$ |\n| $2$ | $A_2$ | $A_1 + A_2$ |\n| $3$ | $A_3$ | $A_1 + A_2 + A_3$ |\n| ... | ... | ... |\n\n> **通俗理解**：就像看月度和年度的收入报表，既要知道这个月赚了多少，也要知道今年总共赚了多少","x":940,"y":80,"width":450,"height":300,"color":"3"},
		{"id":"window_default_range","type":"text","text":"# 窗口默认范围机制\n\n## 默认窗口范围规则\n当有**ORDER BY**但无**ROWS**子句时：\n- **起始位置**: 分区第一行\n- **结束位置**: 当前行\n- **范围表达**: `ROWS UNBOUNDED PRECEDING`\n\n## 数学描述\n```\n第1行: SUM(第1行)\n第2行: SUM(第1行 + 第2行) \n第3行: SUM(第1行 + 第2行 + 第3行)\n...\n第n行: SUM(第1行 + ... + 第n行)\n```\n\n## 为什么需要ORDER BY\n- **确定顺序**: 累计计算需要明确的顺序\n- **窗口边界**: 定义\"之前\"的含义\n- **结果一致性**: 保证每次查询结果相同\n\n> **通俗理解**：就像按时间顺序记账，后面的总是包含前面的","x":-120,"y":960,"width":350,"height":280,"color":"2"},
		{"id":"syntax_analysis","type":"text","text":"# 语法结构深度解析\n\n## 窗口函数完整语法\n```sql\nfunction_name([arguments]) OVER (\n    [PARTITION BY column_list]\n    [ORDER BY column_list]\n    [ROWS/RANGE window_frame]\n)\n```\n\n## 本例中的语法元素\n1. **function_name**: `SUM`\n2. **arguments**: `a.payment`\n3. **PARTITION BY**: 未使用（全部数据为一个分区）\n4. **ORDER BY**: `a.month`（按月份排序）\n5. **window_frame**: 默认值\n\n## 子查询的作用\n- **数据预处理**: 先完成分组统计\n- **简化逻辑**: 将复杂查询分层\n- **提高可读性**: 逻辑清晰易懂\n\n> **通俗理解**：就像做菜要先备菜再炒菜，分步骤更清楚","x":450,"y":940,"width":400,"height":300,"color":"3"},
		{"id":"step1_filter","type":"text","text":"# Step 1: 数据过滤\n\n## 过滤2019年数据\n```sql\nSELECT * \nFROM user_trade \nWHERE YEAR(pay_time) = 2019;\n```\n\n## 关键技术点\n- **YEAR()函数**: 从日期中提取年份\n- **WHERE子句**: 条件过滤\n- **pay_time字段**: DATE类型的支付时间\n\n## 执行结果\n- 筛选出所有2019年的订单记录\n- 为后续分组统计做准备\n\n## 数据示例\n```\nuser_name | piece | price | payment | pay_time\n张三      | 2     | 99.99 | 89.99   | 2019-01-15\n李四      | 1     | 199.0 | 179.0   | 2019-01-20\n...\n```\n\n> **通俗理解**：就像从一堆账单中挑出2019年的账单","x":-120,"y":500,"width":350,"height":300,"color":"5"},
		{"id":"step2_groupby","type":"text","text":"# Step 2: 分组统计\n\n## 按月分组求和\n```sql\nSELECT \n    MONTH(pay_time) as month,\n    SUM(payment) as payment\nFROM user_trade \nWHERE YEAR(pay_time) = 2019\nGROUP BY MONTH(pay_time);\n```\n\n## 关键技术点\n- **MONTH()函数**: 提取月份（$1-12$）\n- **GROUP BY**: 按月份分组\n- **SUM()聚合**: 计算每月支付总额\n- **别名使用**: 方便后续引用\n\n## 执行结果示例\n```\nmonth | payment\n1     | 97199.99\n2     | 221453.7\n3     | 189076.5\n...\n```\n\n> **通俗理解**：就像把一年的账单按月份分类，然后算出每个月花了多少钱","x":420,"y":480,"width":400,"height":320,"color":"6"},
		{"id":"step3_window_function","type":"text","text":"# Step 3: 应用窗口函数\n\n## 完整SQL语句\n```sql\nSELECT \n    a.month,\n    a.payment as 当月支付金额,\n    SUM(a.payment) OVER (\n        ORDER BY a.month\n    ) as 累计支付金额\nFROM (\n    SELECT \n        MONTH(pay_time) as month,\n        SUM(payment) as payment\n    FROM user_trade \n    WHERE YEAR(pay_time) = 2019\n    GROUP BY MONTH(pay_time)\n) a;\n```\n\n## 窗口函数解析\n- **SUM() OVER()**: 窗口聚合函数\n- **ORDER BY month**: 按月份排序\n- **默认窗口范围**: 当前行及之前所有行\n- **子查询**: 作为数据源\n\n## 窗口范围公式\n$$\\text{窗口} = [\\text{第一行}, \\text{当前行}]$$\n\n> **通俗理解**：就像滚雪球，每到一个月就把之前所有月份的钱都加起来","x":960,"y":450,"width":450,"height":380,"color":"4"},
		{"id":"advanced_concepts","type":"text","text":"# 进阶概念扩展\n\n## 窗口范围控制\n```sql\n-- 当前行及前2行\nROWS 2 PRECEDING\n\n-- 当前行及后1行\nROWS 1 FOLLOWING\n\n-- 指定范围\nROWS BETWEEN 1 PRECEDING \nAND 1 FOLLOWING\n```\n\n## 分区应用\n```sql\n-- 按类别分组累计\nSUM(amount) OVER (\n    PARTITION BY category\n    ORDER BY month\n)\n```\n\n## 多窗口函数组合\n```sql\nSELECT \n    month,\n    payment,\n    SUM(payment) OVER w as 累计,\n    AVG(payment) OVER w as 平均\nWINDOW w AS (ORDER BY month)\n```\n\n> **拓展思维**：窗口函数是强大的分析工具，可以实现复杂的统计需求","x":1600,"y":480,"width":300,"height":350,"color":"1"},
		{"id":"next_lesson_preview","type":"text","text":"# 下节课预告\n\n## 排序函数应用\n- **ROW_NUMBER()**: 连续排名\n- **RANK()**: 并列排名（跳跃）\n- **DENSE_RANK()**: 密集排名\n\n## 实战案例\n- 销售人员业绩排名\n- 商品销量排行榜\n- 用户消费能力分级\n\n## 迁移分析函数\n- **LAG/LEAD**: 同比环比分析\n- **FIRST_VALUE/LAST_VALUE**: 首末值对比\n\n## 学习建议\n1. 多练习SQL语法\n2. 理解业务场景\n3. 掌握窗口概念\n4. 培养分析思维\n\n> **学习路径**：从累计到排序到对比，逐步掌握窗口函数的精髓","x":1600,"y":960,"width":300,"height":280,"color":"4"},
		{"id":"result_interpretation","type":"text","text":"# 结果解读与验证\n\n## 执行结果示例\n```\nmonth | 当月支付金额  | 累计支付金额\n1     | 97199.99     | 97199.99\n2     | 221453.7     | 318653.69\n3     | 189076.5     | 507730.19\n4     | 156789.23    | 664519.42\n...\n```\n\n## 数据验证逻辑\n- **第1月**: $97199.99 = 97199.99$ ✓\n- **第2月**: $97199.99 + 221453.7 = 318653.69$ ✓\n- **第3月**: $318653.69 + 189076.5 = 507730.19$ ✓\n\n## 业务价值\n1. **趋势分析**: 观察累计增长趋势\n2. **目标对比**: 与年度目标对比进度\n3. **季度分析**: 季度累计统计\n4. **决策支持**: 基于累计数据做决策\n\n> **通俗理解**：就像看存款余额，既知道这个月存了多少，也知道总共存了多少","x":960,"y":930,"width":450,"height":320,"color":"5"}
	],
	"edges":[
		{"id":"edge1","fromNode":"title_node","fromSide":"bottom","toNode":"function_classification","toSide":"right","color":"4"},
		{"id":"edge2","fromNode":"function_classification","fromSide":"right","toNode":"cumulative_sum_concept","toSide":"left","color":"1"},
		{"id":"edge3","fromNode":"cumulative_sum_concept","fromSide":"right","toNode":"business_requirement","toSide":"left","color":"2"},
		{"id":"edge4","fromNode":"business_requirement","fromSide":"left","toNode":"step1_filter","toSide":"right","color":"3"},
		{"id":"edge5","fromNode":"step1_filter","fromSide":"right","toNode":"step2_groupby","toSide":"left","color":"5"},
		{"id":"edge6","fromNode":"step2_groupby","fromSide":"right","toNode":"step3_window_function","toSide":"left","color":"6"},
		{"id":"edge7","fromNode":"step3_window_function","fromSide":"left","toNode":"window_default_range","toSide":"right","color":"4"},
		{"id":"edge8","fromNode":"window_default_range","fromSide":"right","toNode":"syntax_analysis","toSide":"left","color":"2"},
		{"id":"edge9","fromNode":"syntax_analysis","fromSide":"right","toNode":"result_interpretation","toSide":"left","color":"3"},
		{"id":"edge10","fromNode":"business_requirement","fromSide":"right","toNode":"common_errors","toSide":"left","color":"6"},
		{"id":"edge11","fromNode":"cumulative_sum_concept","fromSide":"right","toNode":"advanced_concepts","toSide":"left","color":"1"},
		{"id":"edge12","fromNode":"result_interpretation","fromSide":"right","toNode":"next_lesson_preview","toSide":"left","color":"5"},
		{"id":"edge13","fromNode":"step3_window_function","fromSide":"top","toNode":"common_errors","toSide":"left","color":"4"},
		{"id":"edge14","fromNode":"advanced_concepts","fromSide":"bottom","toNode":"next_lesson_preview","toSide":"top","color":"1"}
	]
}